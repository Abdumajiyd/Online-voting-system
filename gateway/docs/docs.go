// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/candidate": {
            "put": {
                "description": "Updates an existing candidate.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidates"
                ],
                "summary": "Update an existing candidate",
                "parameters": [
                    {
                        "description": "Candidate data",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.CandidateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new candidate for an election.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidates"
                ],
                "summary": "Create a new candidate",
                "parameters": [
                    {
                        "description": "Candidate data",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.CandidateCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Candidate"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing candidate by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidates"
                ],
                "summary": "Delete an existing candidate",
                "parameters": [
                    {
                        "description": "Candidate data",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.CandidateDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/all": {
            "get": {
                "description": "Retrieves all candidates associated with an election.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidates"
                ],
                "summary": "Get all candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "election_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Public ID (optional)",
                        "name": "public_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.GetAllCandidateRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/candidate/id": {
            "get": {
                "description": "Retrieves a candidate by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Candidates"
                ],
                "summary": "Get a candidate by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Candidate"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election": {
            "put": {
                "description": "Updates an existing election.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Update an existing election",
                "parameters": [
                    {
                        "description": "Election data",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.ElectionUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new election.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Create a new election",
                "parameters": [
                    {
                        "description": "Election data",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.ElectionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Election"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing election by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Delete an existing election",
                "parameters": [
                    {
                        "description": "Election data",
                        "name": "election",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.ElectionDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/all": {
            "get": {
                "description": "Retrieves all elections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Get all elections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election name (optional)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Open date (optional)",
                        "name": "open_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (optional)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.GetAllElectionRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/id": {
            "get": {
                "description": "Retrieves an election by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Get an election by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Election"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/election/results": {
            "get": {
                "description": "Retrieves the results of an election by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Elections"
                ],
                "summary": "Get election results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.GetCandidateVotesRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party": {
            "put": {
                "description": "Updates an existing party.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parties"
                ],
                "summary": "Update a party",
                "parameters": [
                    {
                        "description": "Party data",
                        "name": "party",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.PartyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new party.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parties"
                ],
                "summary": "Create a new party",
                "parameters": [
                    {
                        "description": "Party data",
                        "name": "party",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.PartyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Party"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a party by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parties"
                ],
                "summary": "Delete a party",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/all": {
            "get": {
                "description": "Retrieves all parties.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parties"
                ],
                "summary": "Get all parties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Opened date (optional)",
                        "name": "opened_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name (optional)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Slogan (optional)",
                        "name": "slogan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description (optional)",
                        "name": "description",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.GetAllPartyResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/party/id": {
            "get": {
                "description": "Retrieves a party by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parties"
                ],
                "summary": "Get a party by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Party"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public": {
            "put": {
                "description": "Updates an existing public.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publics"
                ],
                "summary": "Update a public",
                "parameters": [
                    {
                        "description": "Public data",
                        "name": "public",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.PublicUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new public.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publics"
                ],
                "summary": "Create a new public",
                "parameters": [
                    {
                        "description": "Public data",
                        "name": "public",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/public.PublicCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Public"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a public by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publics"
                ],
                "summary": "Delete a public",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.Void"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/all": {
            "get": {
                "description": "Retrieves all publics.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publics"
                ],
                "summary": "Get all publics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Party ID (optional)",
                        "name": "party_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name (optional)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Last name (optional)",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone (optional)",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email (optional)",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Birthday (optional)",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gender (optional)",
                        "name": "gender",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.GetAllPublicRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/id": {
            "get": {
                "description": "Retrieves a public by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publics"
                ],
                "summary": "Get a public by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Public"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote": {
            "post": {
                "description": "Creates a new public vote.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Votes"
                ],
                "summary": "Create a new public vote",
                "parameters": [
                    {
                        "description": "Public vote data",
                        "name": "public_vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vote.PublicVoteCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.PublicVoteRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote/public/all": {
            "get": {
                "description": "Retrieves all public votes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Votes"
                ],
                "summary": "Get all public votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Election ID (optional)",
                        "name": "election_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Public ID (optional)",
                        "name": "public_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.GetAllPublicVoteRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote/public/id": {
            "get": {
                "description": "Retrieves a public vote by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Votes"
                ],
                "summary": "Get a public vote by public vote ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public vote ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.PublicVoteRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote/vote/all": {
            "get": {
                "description": "Retrieves all votes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Votes"
                ],
                "summary": "Get all votes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Candidate ID (optional)",
                        "name": "candidate_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.GetAllVoteRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public_vote/vote/id": {
            "get": {
                "description": "Retrieves a public vote by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public Votes"
                ],
                "summary": "Get a public vote by vote ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vote ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vote.VoteRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "public.GetAllPartyResponse": {
            "type": "object",
            "properties": {
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.Party"
                    }
                }
            }
        },
        "public.GetAllPublicRes": {
            "type": "object",
            "properties": {
                "publics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.Public"
                    }
                }
            }
        },
        "public.Party": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opened_date": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "public.PartyCreate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opened_date": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                }
            }
        },
        "public.PartyUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opened_date": {
                    "type": "string"
                },
                "slogan": {
                    "type": "string"
                }
            }
        },
        "public.Public": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "party_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "public.PublicCreate": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "party_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "public.PublicUpdate": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "party_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "vote.Candidate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "election_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "vote.CandidateCreate": {
            "type": "object",
            "properties": {
                "election_id": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                }
            }
        },
        "vote.CandidateDelete": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "vote.CandidateElectionRes": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "vote.CandidateUpdate": {
            "type": "object",
            "properties": {
                "election_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                }
            }
        },
        "vote.Election": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "vote.ElectionCreate": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string"
                }
            }
        },
        "vote.ElectionDelete": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "vote.ElectionUpdate": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_date": {
                    "type": "string"
                }
            }
        },
        "vote.GetAllCandidateRes": {
            "type": "object",
            "properties": {
                "candidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vote.Candidate"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "vote.GetAllElectionRes": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "elections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vote.Election"
                    }
                }
            }
        },
        "vote.GetAllPublicVoteRes": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "public_votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vote.PublicVoteRes"
                    }
                }
            }
        },
        "vote.GetAllVoteRes": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vote.VoteRes"
                    }
                }
            }
        },
        "vote.GetCandidateVotesRes": {
            "type": "object",
            "properties": {
                "candidateRes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vote.CandidateElectionRes"
                    }
                }
            }
        },
        "vote.PublicVoteCreate": {
            "type": "object",
            "properties": {
                "candidate_id": {
                    "type": "string"
                },
                "election_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                }
            }
        },
        "vote.PublicVoteRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "election_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                }
            }
        },
        "vote.Void": {
            "type": "object"
        },
        "vote.VoteRes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Online Voting System API",
	Description:      "API for managing online voting system resources",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

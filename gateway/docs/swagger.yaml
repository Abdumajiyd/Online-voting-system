basePath: /api/v1
definitions:
  public.GetAllPartyResponse:
    properties:
      parties:
        items:
          $ref: '#/definitions/public.Party'
        type: array
    type: object
  public.GetAllPublicRes:
    properties:
      publics:
        items:
          $ref: '#/definitions/public.Public'
        type: array
    type: object
  public.Party:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      description:
        type: string
      id:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
      updated_at:
        type: string
    type: object
  public.PartyCreate:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  public.PartyUpdate:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      opened_date:
        type: string
      slogan:
        type: string
    type: object
  public.Public:
    properties:
      birthday:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      party_id:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  public.PublicCreate:
    properties:
      birthday:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      party_id:
        type: string
      phone:
        type: string
    type: object
  public.PublicUpdate:
    properties:
      birthday:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      party_id:
        type: string
      phone:
        type: string
    type: object
  vote.Candidate:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      election_id:
        type: string
      id:
        type: string
      public_id:
        type: string
      updated_at:
        type: string
    type: object
  vote.CandidateCreate:
    properties:
      election_id:
        type: string
      public_id:
        type: string
    type: object
  vote.CandidateDelete:
    properties:
      id:
        type: string
    type: object
  vote.CandidateElectionRes:
    properties:
      candidate_id:
        type: string
      count:
        type: integer
    type: object
  vote.CandidateUpdate:
    properties:
      election_id:
        type: string
      id:
        type: string
      public_id:
        type: string
    type: object
  vote.Election:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      end_date:
        type: string
      id:
        type: string
      name:
        type: string
      open_date:
        type: string
      updated_at:
        type: string
    type: object
  vote.ElectionCreate:
    properties:
      end_date:
        type: string
      name:
        type: string
      open_date:
        type: string
    type: object
  vote.ElectionDelete:
    properties:
      id:
        type: string
    type: object
  vote.ElectionUpdate:
    properties:
      end_date:
        type: string
      id:
        type: string
      name:
        type: string
      open_date:
        type: string
    type: object
  vote.GetAllCandidateRes:
    properties:
      candidates:
        items:
          $ref: '#/definitions/vote.Candidate'
        type: array
      count:
        type: integer
    type: object
  vote.GetAllElectionRes:
    properties:
      count:
        type: integer
      elections:
        items:
          $ref: '#/definitions/vote.Election'
        type: array
    type: object
  vote.GetAllPublicVoteRes:
    properties:
      count:
        type: integer
      public_votes:
        items:
          $ref: '#/definitions/vote.PublicVoteRes'
        type: array
    type: object
  vote.GetAllVoteRes:
    properties:
      count:
        type: integer
      votes:
        items:
          $ref: '#/definitions/vote.VoteRes'
        type: array
    type: object
  vote.GetCandidateVotesRes:
    properties:
      candidateRes:
        items:
          $ref: '#/definitions/vote.CandidateElectionRes'
        type: array
    type: object
  vote.PublicVoteCreate:
    properties:
      candidate_id:
        type: string
      election_id:
        type: string
      id:
        type: string
      public_id:
        type: string
    type: object
  vote.PublicVoteRes:
    properties:
      created_at:
        type: string
      election_id:
        type: string
      id:
        type: string
      public_id:
        type: string
    type: object
  vote.Void:
    type: object
  vote.VoteRes:
    properties:
      created_at:
        type: string
      id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing online voting system resources
  title: Online Voting System API
  version: "1.0"
paths:
  /candidate:
    delete:
      consumes:
      - application/json
      description: Deletes an existing candidate by ID.
      parameters:
      - description: Candidate data
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/vote.CandidateDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete an existing candidate
      tags:
      - Candidates
    post:
      consumes:
      - application/json
      description: Creates a new candidate for an election.
      parameters:
      - description: Candidate data
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/vote.CandidateCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Candidate'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new candidate
      tags:
      - Candidates
    put:
      consumes:
      - application/json
      description: Updates an existing candidate.
      parameters:
      - description: Candidate data
        in: body
        name: candidate
        required: true
        schema:
          $ref: '#/definitions/vote.CandidateUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing candidate
      tags:
      - Candidates
  /candidate/all:
    get:
      consumes:
      - application/json
      description: Retrieves all candidates associated with an election.
      parameters:
      - description: Election ID
        in: query
        name: election_id
        type: string
      - description: Public ID (optional)
        in: query
        name: public_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.GetAllCandidateRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all candidates
      tags:
      - Candidates
  /candidate/id:
    get:
      consumes:
      - application/json
      description: Retrieves a candidate by its ID.
      parameters:
      - description: Candidate ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Candidate'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a candidate by its ID
      tags:
      - Candidates
  /election:
    delete:
      consumes:
      - application/json
      description: Deletes an existing election by ID.
      parameters:
      - description: Election data
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/vote.ElectionDelete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete an existing election
      tags:
      - Elections
    post:
      consumes:
      - application/json
      description: Creates a new election.
      parameters:
      - description: Election data
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/vote.ElectionCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Election'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new election
      tags:
      - Elections
    put:
      consumes:
      - application/json
      description: Updates an existing election.
      parameters:
      - description: Election data
        in: body
        name: election
        required: true
        schema:
          $ref: '#/definitions/vote.ElectionUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing election
      tags:
      - Elections
  /election/all:
    get:
      consumes:
      - application/json
      description: Retrieves all elections.
      parameters:
      - description: Election name (optional)
        in: query
        name: name
        type: string
      - description: Open date (optional)
        in: query
        name: open_date
        type: string
      - description: End date (optional)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.GetAllElectionRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all elections
      tags:
      - Elections
  /election/id:
    get:
      consumes:
      - application/json
      description: Retrieves an election by its ID.
      parameters:
      - description: Election ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Election'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get an election by its ID
      tags:
      - Elections
  /election/results:
    get:
      consumes:
      - application/json
      description: Retrieves the results of an election by its ID.
      parameters:
      - description: Election ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.GetCandidateVotesRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get election results
      tags:
      - Elections
  /party:
    delete:
      consumes:
      - application/json
      description: Deletes a party by its ID.
      parameters:
      - description: Party ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a party
      tags:
      - Parties
    post:
      consumes:
      - application/json
      description: Creates a new party.
      parameters:
      - description: Party data
        in: body
        name: party
        required: true
        schema:
          $ref: '#/definitions/public.PartyCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.Party'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new party
      tags:
      - Parties
    put:
      consumes:
      - application/json
      description: Updates an existing party.
      parameters:
      - description: Party data
        in: body
        name: party
        required: true
        schema:
          $ref: '#/definitions/public.PartyUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a party
      tags:
      - Parties
  /party/all:
    get:
      consumes:
      - application/json
      description: Retrieves all parties.
      parameters:
      - description: Opened date (optional)
        in: query
        name: opened_date
        type: string
      - description: Name (optional)
        in: query
        name: name
        type: string
      - description: Slogan (optional)
        in: query
        name: slogan
        type: string
      - description: Description (optional)
        in: query
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.GetAllPartyResponse'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all parties
      tags:
      - Parties
  /party/id:
    get:
      consumes:
      - application/json
      description: Retrieves a party by its ID.
      parameters:
      - description: Party ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.Party'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a party by its ID
      tags:
      - Parties
  /public:
    delete:
      consumes:
      - application/json
      description: Deletes a public by its ID.
      parameters:
      - description: Public ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a public
      tags:
      - Publics
    post:
      consumes:
      - application/json
      description: Creates a new public.
      parameters:
      - description: Public data
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/public.PublicCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.Public'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new public
      tags:
      - Publics
    put:
      consumes:
      - application/json
      description: Updates an existing public.
      parameters:
      - description: Public data
        in: body
        name: public
        required: true
        schema:
          $ref: '#/definitions/public.PublicUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.Void'
        "400":
          description: Invalid request body
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a public
      tags:
      - Publics
  /public/all:
    get:
      consumes:
      - application/json
      description: Retrieves all publics.
      parameters:
      - description: Party ID (optional)
        in: query
        name: party_id
        type: string
      - description: Name (optional)
        in: query
        name: name
        type: string
      - description: Last name (optional)
        in: query
        name: last_name
        type: string
      - description: Phone (optional)
        in: query
        name: phone
        type: string
      - description: Email (optional)
        in: query
        name: email
        type: string
      - description: Birthday (optional)
        in: query
        name: birthday
        type: string
      - description: Gender (optional)
        in: query
        name: gender
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.GetAllPublicRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all publics
      tags:
      - Publics
  /public/id:
    get:
      consumes:
      - application/json
      description: Retrieves a public by its ID.
      parameters:
      - description: Public ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/public.Public'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a public by its ID
      tags:
      - Publics
  /public_vote:
    post:
      consumes:
      - application/json
      description: Creates a new public vote.
      parameters:
      - description: Public vote data
        in: body
        name: public_vote
        required: true
        schema:
          $ref: '#/definitions/vote.PublicVoteCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.PublicVoteRes'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new public vote
      tags:
      - Public Votes
  /public_vote/public/all:
    get:
      consumes:
      - application/json
      description: Retrieves all public votes.
      parameters:
      - description: Election ID (optional)
        in: query
        name: election_id
        type: string
      - description: Public ID (optional)
        in: query
        name: public_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.GetAllPublicVoteRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all public votes
      tags:
      - Public Votes
  /public_vote/public/id:
    get:
      consumes:
      - application/json
      description: Retrieves a public vote by its ID.
      parameters:
      - description: Public vote ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.PublicVoteRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a public vote by public vote ID
      tags:
      - Public Votes
  /public_vote/vote/all:
    get:
      consumes:
      - application/json
      description: Retrieves all votes.
      parameters:
      - description: Candidate ID (optional)
        in: query
        name: candidate_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.GetAllVoteRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all votes
      tags:
      - Public Votes
  /public_vote/vote/id:
    get:
      consumes:
      - application/json
      description: Retrieves a public vote by its ID.
      parameters:
      - description: Vote ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vote.VoteRes'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Resource not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a public vote by vote ID
      tags:
      - Public Votes
swagger: "2.0"
